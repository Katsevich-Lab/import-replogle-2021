repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
# load R.utils; increase timeout to 5 hours
library(R.utils)
options(timeout = 5 * 60 * 60)
# create raw directory; also create subdirectories for the four datasets
raw_data_dir <- paste0(repl_offsite, "raw/")
raw_data_dir_rep <- paste0(raw_data_dir, c("kd8", "rd7", "kd6", "kd8_ultima"))
for (dir in raw_data_dir_rep) {
if (!dir.exists(dir)) dir.create(dir, recursive = TRUE)
}
# URL of data
data_urls <- c(rd7 = "https://plus.figshare.com/ndownloader/files/36000888",
kd8_ultima = "https://plus.figshare.com/ndownloader/files/36000884",
kd6 = "https://plus.figshare.com/ndownloader/files/36000843",
kd8 = "https://plus.figshare.com/ndownloader/files/36000572")[1]
raw_data_dir
# download the spread sheet containing the grna vector information
download.file(url = "https://www.cell.com/cms/10.1016/j.cell.2022.05.013/attachment/5a940406-8883-4368-890e-e05f63eff4fd/mmc1.xlsx",
destfile = "grna_library_table.xlsx")
raw_data_dir_rep
raw_data_dir
paste0(raw_data_dir, "/grna_library_table.xlsx")
# download the spread sheet containing the grna vector information
download.file(url = "https://www.cell.com/cms/10.1016/j.cell.2022.05.013/attachment/5a940406-8883-4368-890e-e05f63eff4fd/mmc1.xlsx",
destfile = paste0(raw_data_dir, "grna_library_table.xlsx"))
# download the spread sheet containing the grna vector information
download.file(url = "https://www.cell.com/cms/10.1016/j.cell.2022.05.013/attachment/5a940406-8883-4368-890e-e05f63eff4fd/mmc1.xlsxdl=1",
destfile = paste0(raw_data_dir, "grna_library_table.xlsx"))
# download the spread sheet containing the grna vector information
download.file(url = "https://www.cell.com/cms/10.1016/j.cell.2022.05.013/attachment/5a940406-8883-4368-890e-e05f63eff4fd/mmc1.xlsx",
destfile = paste0(raw_data_dir, "grna_library_table.xlsx"))
# download the spread sheet containing the grna vector information
download.file(url = "https://www.cell.com/cms/10.1016/j.cell.2022.05.013/attachment/5a940406-8883-4368-890e-e05f63eff4fd/mmc1.xlsx",
destfile = paste0(raw_data_dir, "grna_library_table.xlsx"), mode = "wb")
# download the spread sheet containing the grna vector information
download.file(url = "https://www.cell.com/cms/10.1016/j.cell.2022.05.013/attachment/5a940406-8883-4368-890e-e05f63eff4fd/mmc1.xlsx", destfile = paste0(raw_data_dir, "grna_library_table.xlsx"), mode = "wb")
raw_data_dir
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
source("~/.Rprofile")
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
repl_offsite
repl_offsite
readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"))
readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 1)
readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 2)
readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3)
readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 4)
readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 1)
readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 1,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_id_a", "target_sequence_a", "grna_b", "target_sequence_b"))
readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 1,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_id_a", "target_sequence_a", "grna_b", "target_sequence_b", "duplicated", "either_duplicated"))
repl_offsite
repl_offsite
grna_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1"))
grna_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"))
grna_table
head(grna_table)
tail(grna_table)
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
feature_table
head(feature_table)
tail(feature_table)
head(feature_table)
vector_info
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_id_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"))
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
vector_info
feature_table
grna_table <- feature_table |> dplyr::filter(modality == "CRISPR Guide Capture")
grna_table
feature_table
vector_info
vector_info$vector_id |> head()
vector_info <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_id_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"),
skip = 1)
vector_info
vector_info$vector_id
vector_info$vector_id |> head(10)
head(vector_info)
repl_offsite
vector_info
feature_table
grna_table
head(vector_info)
vector_info
vector_info <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"),
skip = 1)
vector_info$grna_a
vector_info$grna_a |> head()
vector_info$grna_a |> head()
grna_table$id
grna_table$id |> head(20)
grna_table$id |> sample(20)
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"),
skip = 1)
head(vector_info_table)
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"),
skip = 1)
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
vector_info_table$grna_a |> head(10)
feature_table$id |> head(10)
grna_table$id |> head(10)
View(grna_table)
View(vector_info_table)
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_a, "_posB")
head(vector_info_table)
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
dplyr::select(vector_id, gene_id, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_a, "_posB")
vector_info_table
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
dplyr::select(vector_id, gene_id, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
vector_info_table
nrow
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
dplyr::select(vector_id, gene_id, grna_a, grna_b)
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1)
vector_info_table$either_duplicated |> sum()
vector_info_table$duplicated |> sum()
vector_info_table
vector_info_table |> dplyr::filter(duplicated)
vector_info_table
head(vector_info_table)
tail(vector_info_table)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
dplyr::select(vector_id, gene_id, grna_a, grna_b)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
source("~/.research_config")
source("~/.Rprofile")
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
dplyr::select(vector_id, gene_id, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
grna_table <- feature_table |> dplyr::filter(modality == "CRISPR Guide Capture")
View(vector_info_table)
c(vector_info_table$grna_a, vector_info_table$grna_b)
c(vector_info_table$grna_a, vector_info_table$grna_b) |> length()
nrow(grna_table)
# verify that all entries in "grna_table" are contained within "vector_info_table"
grna_table$id |> head()
# verify that all entries in "grna_table" are contained within "vector_info_table"
grna_table$id %in% c(vector_info_table$grna_a, vector_info_table$grna_b)
# verify that all entries in "grna_table" are contained within "vector_info_table"
all(grna_table$id %in% c(vector_info_table$grna_a, vector_info_table$grna_b))
grna_table$id
# verify that all entries in "grna_table" are contained within "vector_info_table"
which(!(grna_table$id %in% c(vector_info_table$grna_a, vector_info_table$grna_b)))
# verify that all entries in "grna_table" are contained within "vector_info_table"
x <- which(!(grna_table$id %in% c(vector_info_table$grna_a, vector_info_table$grna_b)))
grna_table[x,]
feature_table
View(feature_table)
View(vector_info_table)
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
feature_table
View(feature_table)
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
head(feature_table)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
dplyr::select(vector_id, gene_id, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
vector_info_table
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
dplyr::select(vector_id, gene_id, grna_a, grna_b)
vector_info_table
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
head(feature_table)
grna_table <- feature_table |> dplyr::filter(modality == "CRISPR Guide Capture")
grna_table
grna_table$id
head(grna_table)
vector_info_table
head(vector_info_table)
library(tidyverse)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
dplyr::select(vector_id, gene_id, grna_a, grna_b)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
select(vector_id, gene_id, grna_a, grna_b)
readxl
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
grna_table <- feature_table |> filter(modality == "CRISPR Guide Capture")
library(tidyverse)
conflicts_prefer(dplyr::filter)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
source("~/.Rprofile")
library(tidyverse)
conflicts_prefer(dplyr::filter)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
select(vector_id, gene_id, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
grna_table <- feature_table |> filter(modality == "CRISPR Guide Capture")
vector_info_table
head(vector_info_table)
tail(vector_info_table)
vector_info_table
vector_info_table
tail(vector_info_table)
head(vector_info_table)
# reshape vector_info_table
vector_info_table |> pivot_longer(cols = c("grna_a", "grna_b"))
# reshape vector_info_table
vector_info_table |> pivot_longer(cols = c("grna_a", "grna_b"), values_to = "grna_id")
# reshape vector_info_table
vector_info_table |> pivot_longer(cols = c("grna_a", "grna_b"), values_to = "grna_id", names_to = NULL)
vector_info_table
tail(vector_info_table)
head(vector_info_table)
# reshape vector_info_table
vector_info_table_reshape <- vector_info_table |>
pivot_longer(cols = c("grna_a", "grna_b"), values_to = "grna_id", names_to = NULL)
vector_info_table_reshape
head(vector_info_table_reshape)
vector_info_table_reshape
head(vector_info_table_reshape)
vector_info_table_reshape
tail(vector_info_table_reshape)
head(grna_table$id)
tail(grna_table$id)
# subset vector_info_table_reshape, keeping only those gRNAs contained within the features df
vector_info_table_reshape <- vector_info_table_reshape |> dplyr::filter(grna_id %in% grna_table$id)
vector_info_table_reshape
nrow(vector_info_table_reshape)
head(vector_info_table_reshape)
tail(vector_info_table_reshape)
vector_info_table_reshape
nrow(grna_table)
nrow(vector_info_table_reshape)
5346 - 5328
18 / 5328
18 / 5328 * 100
vector_info_table_reshape
grep(pattern = "non-targeting", vector_info_table_reshape$vector_id)
nt_idxs <- grep(pattern = "non-targeting", vector_info_table_reshape$vector_id)
nt_idxs
vector_info_table_reshape[nt_idxs,]
nt_idxs
nt_idxs
curr_nt_vector_ids <- vector_info_table_reshape$vector_id[nt_idxs]
curr_nt_vector_ids
curr_nt_vector_ids <- vector_info_table_reshape$vector_id[nt_idxs] |> unique()
curr_nt_vector_ids
length(curr_nt_vector_ids)
tail(curr_nt_vector_ids)
head(curr_nt_vector_ids)
curr_nt_vector_ids
grna_table
grna_table
head(grna_table)
grna_table <- feature_table |> filter(modality == "CRISPR Guide Capture") |> dplyr::select(id)
grna_table
# reshape vector_info_table
vector_info_table_reshape <- vector_info_table |>
pivot_longer(cols = c("grna_a", "grna_b"), values_to = "grna_id", names_to = NULL)
vector_info_table_reshape
head(vector_info_table_reshape)
tail(vector_info_table_reshape)
conflicts_prefer(dplyr::filter)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
source("~/.Rprofile")
vector_info_table_reshape
library(tidyverse)
conflicts_prefer(dplyr::filter)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
select(vector_id, gene_id, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
grna_table <- feature_table |> filter(modality == "CRISPR Guide Capture") |> dplyr::select(id)
# reshape vector_info_table
vector_info_table_reshape <- vector_info_table |>
pivot_longer(cols = c("grna_a", "grna_b"), values_to = "grna_id", names_to = NULL)
# subset vector_info_table_reshape, keeping only those gRNAs contained within the features df
vector_info_table_reshape <- vector_info_table_reshape |> dplyr::filter(grna_id %in% grna_table$id)
vector_info_table_reshape
vector_info_table_reshape
grna_table
head(grna_table)
# reshape vector_info_table
vector_info_table_reshape <- vector_info_table |>
pivot_longer(cols = c("grna_a", "grna_b"), values_to = "id", names_to = NULL)
head(vector_info_table_reshape)
# reshape vector_info_table
vector_info_table_reshape <- vector_info_table |>
pivot_longer(cols = c("grna_a", "grna_b"), values_to = "id", names_to = NULL)
vector_info_table_reshape
head(vector_info_table_reshape)
vector_info_table_reshape
grna_table
grna_table
head(vector_info_table_reshape)
conflicts_prefer(dplyr::filter)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "gene_id", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
select(vector_id, gene_id, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
grna_table <- feature_table |> filter(modality == "CRISPR Guide Capture") |> dplyr::select(id)
# reshape vector_info_table
vector_info_table_reshape <- vector_info_table |>
pivot_longer(cols = c("grna_a", "grna_b"), values_to = "id", names_to = NULL)
grna_table
vector_info_table_reshape
left_join(x = grna_table, y = vector_info_table_reshape, by = "id")
grna_table_updated <- left_join(x = grna_table, y = vector_info_table_reshape, by = "id")
grna_table_updated
head(grna_table_updated)
tail(grna_table_updated)
grna_table_updated
grna_table_updated |> dplyr::sample_n(100)
conflicts_prefer(dplyr::filter)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "target", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
select(vector_id, target, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
grna_table <- feature_table |> filter(modality == "CRISPR Guide Capture") |> dplyr::select(id)
# reshape vector_info_table
vector_info_table_reshape <- vector_info_table |>
pivot_longer(cols = c("grna_a", "grna_b"), values_to = "id", names_to = NULL)
grna_table_updated <- left_join(x = grna_table, y = vector_info_table_reshape, by = "id")
grna_table_updated
conflicts_prefer(dplyr::filter)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "grna_target", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
select(vector_id, grna_target, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
grna_table <- feature_table |> filter(modality == "CRISPR Guide Capture") |> dplyr::select(id)
# reshape vector_info_table
vector_info_table_reshape <- vector_info_table |>
pivot_longer(cols = c("grna_a", "grna_b"), values_to = "grna_id", names_to = NULL)
grna_table_updated <- left_join(x = grna_table, y = vector_info_table_reshape, by = "id") |>
dplyr::arrange(id)
grna_table_updated <- left_join(x = grna_table, y = vector_info_table_reshape, by = "id") |>
dplyr::arrange(grna_id)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "grna_target", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
select(vector_id, grna_target, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("id", "name", "modality"))
grna_table <- feature_table |> filter(modality == "CRISPR Guide Capture") |> dplyr::select(id)
# reshape vector_info_table
vector_info_table_reshape <- vector_info_table |>
pivot_longer(cols = c("grna_a", "grna_b"), values_to = "grna_id", names_to = NULL)
grna_table_updated <- left_join(x = grna_table, y = vector_info_table_reshape, by = "id") |>
dplyr::arrange(grna_id)
conflicts_prefer(dplyr::filter)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "grna_target", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
select(vector_id, grna_target, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("grna_id", "name", "modality"))
grna_table <- feature_table |> filter(modality == "CRISPR Guide Capture") |> dplyr::select(id)
conflicts_prefer(dplyr::filter)
repl_offsite <- paste0(.get_config_path("LOCAL_REPLOGLE_2022_DATA_DIR"))
vector_info_table <- readxl::read_xlsx(path = paste0(repl_offsite, "raw/mmc1.xlsx"), sheet = 3,
col_names = c("vector_id", "gene_name", "transcript", "grna_target", "grna_a", "target_sequence_a",
"grna_b", "target_sequence_b", "duplicated", "either_duplicated"), skip = 1) |>
select(vector_id, grna_target, grna_a, grna_b)
vector_info_table$grna_a <- paste0(vector_info_table$grna_a, "_posA")
vector_info_table$grna_b <- paste0(vector_info_table$grna_b, "_posB")
feature_table <- data.table::fread(input = paste0(repl_offsite, "raw/rd7/rpe1_other/batch_1/RD7_1_features.tsv.gz"),
col.names = c("grna_id", "name", "modality"))
grna_table <- feature_table |> filter(modality == "CRISPR Guide Capture") |> dplyr::select(id)
grna_table <- feature_table |> filter(modality == "CRISPR Guide Capture") |> dplyr::select(grna_id)
# reshape vector_info_table
vector_info_table_reshape <- vector_info_table |>
pivot_longer(cols = c("grna_a", "grna_b"), values_to = "grna_id", names_to = NULL)
grna_table_updated <- left_join(x = grna_table, y = vector_info_table_reshape, by = "grna_id") |>
dplyr::arrange(grna_id)
grna_table_updated
head(grna_table_updated)
tail(grna_table_updated)
grna_table_updated
grna_table_updated
grna_table_updated |> dplyr::sample_n(40)
grna_table_updated$grna_target |> table()
grna_table_updated$grna_target |> is.na() |> any()
grna_table_updated$grna_target |> is.na() |> sum()
grna_table_updated$grna_target[is.na(grna_table_updated$grna_target)] <- "unknown"
grna_table_updated
is.na(grna_table_updated$vector_id) |> sum()
